{"remainingRequest":"/Users/rns/Documents/workplace/vscode/demo/node_modules/thread-loader/dist/cjs.js!/Users/rns/Documents/workplace/vscode/demo/node_modules/babel-loader/lib/index.js!/Users/rns/Documents/workplace/vscode/demo/src/store/modules/user.js","dependencies":[{"path":"/Users/rns/Documents/workplace/vscode/demo/src/store/modules/user.js","mtime":1607061023000},{"path":"/Users/rns/Documents/workplace/vscode/demo/babel.config.js","mtime":1607061023000},{"path":"/Users/rns/Documents/workplace/vscode/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rns/Documents/workplace/vscode/demo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rns/Documents/workplace/vscode/demo/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9ybnMvRG9jdW1lbnRzL3dvcmtwbGFjZS92c2NvZGUvZGVtby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbS5qcyI7CmltcG9ydCB7IGxvZ2luIGFzIF9sb2dpbiwgbG9nb3V0IGFzIF9sb2dvdXQsIGdldEluZm8gYXMgX2dldEluZm8gfSBmcm9tICdAL2FwaS91c2VyJzsKaW1wb3J0IHsgZ2V0VG9rZW4sIHNldFRva2VuLCByZW1vdmVUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7CmltcG9ydCByb3V0ZXIsIHsgcmVzZXRSb3V0ZXIgfSBmcm9tICdAL3JvdXRlcic7CnZhciBzdGF0ZSA9IHsKICB0b2tlbjogZ2V0VG9rZW4oKSwKICBuYW1lOiAnJywKICBhdmF0YXI6ICcnLAogIGludHJvZHVjdGlvbjogJycsCiAgcm9sZXM6IFtdCn07CnZhciBtdXRhdGlvbnMgPSB7CiAgU0VUX1RPS0VOOiBmdW5jdGlvbiBTRVRfVE9LRU4oc3RhdGUsIHRva2VuKSB7CiAgICBzdGF0ZS50b2tlbiA9IHRva2VuOwogIH0sCiAgU0VUX0lOVFJPRFVDVElPTjogZnVuY3Rpb24gU0VUX0lOVFJPRFVDVElPTihzdGF0ZSwgaW50cm9kdWN0aW9uKSB7CiAgICBzdGF0ZS5pbnRyb2R1Y3Rpb24gPSBpbnRyb2R1Y3Rpb247CiAgfSwKICBTRVRfTkFNRTogZnVuY3Rpb24gU0VUX05BTUUoc3RhdGUsIG5hbWUpIHsKICAgIHN0YXRlLm5hbWUgPSBuYW1lOwogIH0sCiAgU0VUX0FWQVRBUjogZnVuY3Rpb24gU0VUX0FWQVRBUihzdGF0ZSwgYXZhdGFyKSB7CiAgICBzdGF0ZS5hdmF0YXIgPSBhdmF0YXI7CiAgfSwKICBTRVRfUk9MRVM6IGZ1bmN0aW9uIFNFVF9ST0xFUyhzdGF0ZSwgcm9sZXMpIHsKICAgIHN0YXRlLnJvbGVzID0gcm9sZXM7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICAvLyB1c2VyIGxvZ2luCiAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKF9yZWYsIHVzZXJJbmZvKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICB2YXIgdXNlcm5hbWUgPSB1c2VySW5mby51c2VybmFtZSwKICAgICAgICBwYXNzd29yZCA9IHVzZXJJbmZvLnBhc3N3b3JkOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgX2xvZ2luKHsKICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUudHJpbSgpLAogICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICBjb21taXQoJ1NFVF9UT0tFTicsIGRhdGEudG9rZW4pOwogICAgICAgIHNldFRva2VuKGRhdGEudG9rZW4pOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAogIC8vIGdldCB1c2VyIGluZm8KICBnZXRJbmZvOiBmdW5jdGlvbiBnZXRJbmZvKF9yZWYyKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0LAogICAgICAgIHN0YXRlID0gX3JlZjIuc3RhdGU7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBfZ2V0SW5mbyhzdGF0ZS50b2tlbikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgIGlmICghZGF0YSkgewogICAgICAgICAgcmVqZWN0KCdWZXJpZmljYXRpb24gZmFpbGVkLCBwbGVhc2UgTG9naW4gYWdhaW4uJyk7CiAgICAgICAgfQoKICAgICAgICB2YXIgcm9sZXMgPSBkYXRhLnJvbGVzLAogICAgICAgICAgICBuYW1lID0gZGF0YS5uYW1lLAogICAgICAgICAgICBhdmF0YXIgPSBkYXRhLmF2YXRhciwKICAgICAgICAgICAgaW50cm9kdWN0aW9uID0gZGF0YS5pbnRyb2R1Y3Rpb247IC8vIHJvbGVzIG11c3QgYmUgYSBub24tZW1wdHkgYXJyYXkKCiAgICAgICAgaWYgKCFyb2xlcyB8fCByb2xlcy5sZW5ndGggPD0gMCkgewogICAgICAgICAgcmVqZWN0KCdnZXRJbmZvOiByb2xlcyBtdXN0IGJlIGEgbm9uLW51bGwgYXJyYXkhJyk7CiAgICAgICAgfQoKICAgICAgICBjb21taXQoJ1NFVF9ST0xFUycsIHJvbGVzKTsKICAgICAgICBjb21taXQoJ1NFVF9OQU1FJywgbmFtZSk7CiAgICAgICAgY29tbWl0KCdTRVRfQVZBVEFSJywgYXZhdGFyKTsKICAgICAgICBjb21taXQoJ1NFVF9JTlRST0RVQ1RJT04nLCBpbnRyb2R1Y3Rpb24pOwogICAgICAgIHJlc29sdmUoZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKICAvLyB1c2VyIGxvZ291dAogIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KF9yZWYzKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0LAogICAgICAgIHN0YXRlID0gX3JlZjMuc3RhdGUsCiAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaDsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIF9sb2dvdXQoc3RhdGUudG9rZW4pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgJycpOwogICAgICAgIGNvbW1pdCgnU0VUX1JPTEVTJywgW10pOwogICAgICAgIHJlbW92ZVRva2VuKCk7CiAgICAgICAgcmVzZXRSb3V0ZXIoKTsgLy8gcmVzZXQgdmlzaXRlZCB2aWV3cyBhbmQgY2FjaGVkIHZpZXdzCiAgICAgICAgLy8gdG8gZml4ZWQgaHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4vaXNzdWVzLzI0ODUKCiAgICAgICAgZGlzcGF0Y2goJ3RhZ3NWaWV3L2RlbEFsbFZpZXdzJywgbnVsbCwgewogICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgIH0pOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAogIC8vIHJlbW92ZSB0b2tlbgogIHJlc2V0VG9rZW46IGZ1bmN0aW9uIHJlc2V0VG9rZW4oX3JlZjQpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgY29tbWl0KCdTRVRfVE9LRU4nLCAnJyk7CiAgICAgIGNvbW1pdCgnU0VUX1JPTEVTJywgW10pOwogICAgICByZW1vdmVUb2tlbigpOwogICAgICByZXNvbHZlKCk7CiAgICB9KTsKICB9LAogIC8vIGR5bmFtaWNhbGx5IG1vZGlmeSBwZXJtaXNzaW9ucwogIGNoYW5nZVJvbGVzOiBmdW5jdGlvbiBjaGFuZ2VSb2xlcyhfcmVmNSwgcm9sZSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIHRva2VuLCBfeWllbGQkZGlzcGF0Y2gsIHJvbGVzLCBhY2Nlc3NSb3V0ZXM7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjUuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWY1LmRpc3BhdGNoOwogICAgICAgICAgICAgIHRva2VuID0gcm9sZSArICctdG9rZW4nOwogICAgICAgICAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgdG9rZW4pOwogICAgICAgICAgICAgIHNldFRva2VuKHRva2VuKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ2dldEluZm8nKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfeWllbGQkZGlzcGF0Y2ggPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJvbGVzID0gX3lpZWxkJGRpc3BhdGNoLnJvbGVzOwogICAgICAgICAgICAgIHJlc2V0Um91dGVyKCk7IC8vIGdlbmVyYXRlIGFjY2Vzc2libGUgcm91dGVzIG1hcCBiYXNlZCBvbiByb2xlcwoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdwZXJtaXNzaW9uL2dlbmVyYXRlUm91dGVzJywgcm9sZXMsIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgYWNjZXNzUm91dGVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAvLyBkeW5hbWljYWxseSBhZGQgYWNjZXNzaWJsZSByb3V0ZXMKICAgICAgICAgICAgICByb3V0ZXIuYWRkUm91dGVzKGFjY2Vzc1JvdXRlcyk7IC8vIHJlc2V0IHZpc2l0ZWQgdmlld3MgYW5kIGNhY2hlZCB2aWV3cwoKICAgICAgICAgICAgICBkaXNwYXRjaCgndGFnc1ZpZXcvZGVsQWxsVmlld3MnLCBudWxsLCB7CiAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMKfTs="},null]}